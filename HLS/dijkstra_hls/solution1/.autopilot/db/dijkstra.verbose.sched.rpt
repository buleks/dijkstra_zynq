

================================================================
== Vivado HLS Report for 'dijkstra'
================================================================
* Date:           Thu Jun 16 22:11:31 2016

* Version:        2014.4 (Build 1071461 on Tue Nov 18 16:42:57 PM 2014)
* Project:        dijkstra_hls
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |  10.00|      6.50|        1.25|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+-----+-----+----------+-----------+-----------+------+----------+
        |                    |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name     | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------+-----+-----+----------+-----------+-----------+------+----------+
        |- reset             |    8|    8|         1|          -|          -|     8|    no    |
        |- input_copy_o      |  144|  144|        18|          -|          -|     8|    no    |
        | + input_copy_i     |   16|   16|         2|          -|          -|     8|    no    |
        |- main_loop         |    ?|    ?|         ?|          -|          -|     ?|    no    |
        | + max_values_o     |   24|   88|  3 ~ 11  |          -|          -|     8|    no    |
        |  ++ max_values_i   |    8|    8|         1|          -|          -|     8|    no    |
        | + min_o            |   24|  160|  3 ~ 20  |          -|          -|     8|    no    |
        |  ++ min_i          |   16|   16|         2|          -|          -|     8|    no    |
        | + substract_o      |   24|  152|  3 ~ 19  |          -|          -|     8|    no    |
        |  ++ substract_i    |   16|   16|         2|          -|          -|     8|    no    |
        | + mark_vertex_o    |   24|  152|  3 ~ 19  |          -|          -|     8|    no    |
        |  ++ mark_vertex_i  |   16|   16|         2|          -|          -|     8|    no    |
        | + check            |    ?|    ?|         2|          -|          -|     ?|    no    |
        |- send_result       |   16|   16|         2|          -|          -|     8|    no    |
        +--------------------+-----+-----+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 26
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (exitcond1)
	2  / (!exitcond1)
3 --> 
	6  / (exitcond2)
	4  / (!exitcond2)
4 --> 
	5  / (!exitcond3)
	3  / (exitcond3)
5 --> 
	4  / true
6 --> 
	7  / true
7 --> 
	8  / (!exitcond4)
	10  / (exitcond4)
8 --> 
	9  / true
9 --> 
	9  / (vector_load & !exitcond6)
	7  / (!vector_load) | (exitcond6)
10 --> 
	11  / (!exitcond5)
	15  / (exitcond5)
11 --> 
	14  / (!vector_load_1)
	12  / (vector_load_1)
12 --> 
	13  / (!exitcond8)
	14  / (exitcond8)
13 --> 
	12  / true
14 --> 
	10  / true
15 --> 
	16  / (!exitcond7)
	19  / (exitcond7)
16 --> 
	17  / true
17 --> 
	18  / (vector_load_2 & !exitcond10)
	15  / (!vector_load_2) | (exitcond10)
18 --> 
	17  / true
19 --> 
	20  / (!exitcond9)
	23  / (exitcond9)
20 --> 
	21  / true
21 --> 
	22  / (vector_load_3 & !exitcond11)
	19  / (!vector_load_3) | (exitcond11)
22 --> 
	21  / true
23 --> 
	24  / true
24 --> 
	23  / (!tmp_20 & vector_load_4)
	25  / (tmp_20 & tmp_22) | (!vector_load_4 & tmp_22)
	6  / (tmp_20 & !tmp_22) | (!vector_load_4 & !tmp_22)
25 --> 
	26  / (!exitcond)
26 --> 
	25  / true
* FSM state operations: 

 <State 1>: 2.39ns
ST_1: stg_27 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap([64 x i8]* %in_data_V), !map !7

ST_1: stg_28 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap([64 x i1]* %in_last_V), !map !13

ST_1: stg_29 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap(i8 %start_point_V), !map !17

ST_1: stg_30 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap([8 x i8]* %out_data_V), !map !23

ST_1: stg_31 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap([8 x i1]* %out_last_V), !map !29

ST_1: stg_32 [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecTopModule([9 x i8]* @str) nounwind

ST_1: start_point_V_read [1/1] 0.00ns
:6  %start_point_V_read = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %start_point_V)

ST_1: tmp [1/1] 0.00ns
:7  %tmp = zext i8 %start_point_V_read to i64

ST_1: vector_addr [1/1] 0.00ns
:8  %vector_addr = getelementptr [8 x i1]* @vector, i64 0, i64 %tmp

ST_1: stg_36 [1/1] 2.39ns
:9  store i1 true, i1* %vector_addr, align 1

ST_1: stg_37 [1/1] 1.57ns
:10  br label %1


 <State 2>: 3.45ns
ST_2: i [1/1] 0.00ns
:0  %i = phi i4 [ 0, %0 ], [ %i_8, %2 ]

ST_2: exitcond1 [1/1] 1.88ns
:1  %exitcond1 = icmp eq i4 %i, -8

ST_2: empty [1/1] 0.00ns
:2  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)

ST_2: i_8 [1/1] 0.80ns
:3  %i_8 = add i4 %i, 1

ST_2: stg_42 [1/1] 1.57ns
:4  br i1 %exitcond1, label %.preheader55, label %2

ST_2: stg_43 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @p_str) nounwind

ST_2: tmp_1 [1/1] 0.00ns
:1  %tmp_1 = zext i4 %i to i64

ST_2: vector_addr_1 [1/1] 0.00ns
:2  %vector_addr_1 = getelementptr [8 x i1]* @vector, i64 0, i64 %tmp_1

ST_2: stg_46 [1/1] 2.39ns
:3  store i1 false, i1* %vector_addr_1, align 1

ST_2: stg_47 [1/1] 0.00ns
:4  br label %1


 <State 3>: 1.88ns
ST_3: i_1 [1/1] 0.00ns
.preheader55:0  %i_1 = phi i4 [ %i_9, %6 ], [ 0, %1 ]

ST_3: exitcond2 [1/1] 1.88ns
.preheader55:1  %exitcond2 = icmp eq i4 %i_1, -8

ST_3: empty_2 [1/1] 0.00ns
.preheader55:2  %empty_2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)

ST_3: i_9 [1/1] 0.80ns
.preheader55:3  %i_9 = add i4 %i_1, 1

ST_3: stg_52 [1/1] 0.00ns
.preheader55:4  br i1 %exitcond2, label %.preheader54, label %3

ST_3: stg_53 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([13 x i8]* @p_str1) nounwind

ST_3: tmp_6 [1/1] 0.00ns
:1  %tmp_6 = call i32 (...)* @_ssdm_op_SpecRegionBegin([13 x i8]* @p_str1)

ST_3: tmp_5 [1/1] 0.00ns
:2  %tmp_5 = trunc i4 %i_1 to i3

ST_3: tmp_4 [1/1] 0.00ns
:3  %tmp_4 = call i6 @_ssdm_op_BitConcatenate.i6.i3.i3(i3 %tmp_5, i3 0)

ST_3: tmp_12 [1/1] 0.00ns
:4  %tmp_12 = call i7 @_ssdm_op_BitConcatenate.i7.i4.i3(i4 %i_1, i3 0)

ST_3: matrix_addr9_cast [1/1] 0.00ns
:5  %matrix_addr9_cast = zext i7 %tmp_12 to i8

ST_3: stg_59 [1/1] 1.57ns
:6  br label %4


 <State 4>: 4.11ns
ST_4: e [1/1] 0.00ns
:0  %e = phi i4 [ 0, %3 ], [ %e_5, %5 ]

ST_4: exitcond3 [1/1] 1.88ns
:1  %exitcond3 = icmp eq i4 %e, -8

ST_4: empty_3 [1/1] 0.00ns
:2  %empty_3 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)

ST_4: e_5 [1/1] 0.80ns
:3  %e_5 = add i4 %e, 1

ST_4: stg_64 [1/1] 0.00ns
:4  br i1 %exitcond3, label %6, label %5

ST_4: tmp_7_cast [1/1] 0.00ns
:1  %tmp_7_cast = zext i4 %e to i6

ST_4: tmp_8 [1/1] 1.72ns
:2  %tmp_8 = add i6 %tmp_4, %tmp_7_cast

ST_4: tmp_9 [1/1] 0.00ns
:3  %tmp_9 = zext i6 %tmp_8 to i64

ST_4: in_data_V_addr [1/1] 0.00ns
:4  %in_data_V_addr = getelementptr [64 x i8]* %in_data_V, i64 0, i64 %tmp_9

ST_4: in_data_V_load [2/2] 2.39ns
:5  %in_data_V_load = load i8* %in_data_V_addr, align 1

ST_4: tmp_trn_cast [1/1] 0.00ns
:6  %tmp_trn_cast = zext i4 %e to i8

ST_4: matrix_addr1 [1/1] 1.72ns
:7  %matrix_addr1 = add i8 %matrix_addr9_cast, %tmp_trn_cast

ST_4: empty_4 [1/1] 0.00ns
:0  %empty_4 = call i32 (...)* @_ssdm_op_SpecRegionEnd([13 x i8]* @p_str1, i32 %tmp_6)

ST_4: stg_73 [1/1] 0.00ns
:1  br label %.preheader55


 <State 5>: 4.78ns
ST_5: stg_74 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([13 x i8]* @p_str2) nounwind

ST_5: in_data_V_load [1/2] 2.39ns
:5  %in_data_V_load = load i8* %in_data_V_addr, align 1

ST_5: tmp_15 [1/1] 0.00ns
:8  %tmp_15 = zext i8 %matrix_addr1 to i64

ST_5: matrix_addr [1/1] 0.00ns
:9  %matrix_addr = getelementptr [64 x i8]* @matrix, i64 0, i64 %tmp_15

ST_5: stg_78 [1/1] 2.39ns
:10  store i8 %in_data_V_load, i8* %matrix_addr, align 1

ST_5: stg_79 [1/1] 0.00ns
:11  br label %4


 <State 6>: 1.57ns
ST_6: stg_80 [1/1] 0.00ns
.preheader54:0  call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str3) nounwind

ST_6: tmp_3 [1/1] 0.00ns
.preheader54:1  %tmp_3 = call i32 (...)* @_ssdm_op_SpecRegionBegin([10 x i8]* @p_str3)

ST_6: stg_82 [1/1] 1.57ns
.preheader54:2  br label %7


 <State 7>: 3.45ns
ST_7: i_2 [1/1] 0.00ns
:0  %i_2 = phi i4 [ 0, %.preheader54 ], [ %i_14, %.loopexit53 ]

ST_7: exitcond4 [1/1] 1.88ns
:1  %exitcond4 = icmp eq i4 %i_2, -8

ST_7: empty_5 [1/1] 0.00ns
:2  %empty_5 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)

ST_7: i_14 [1/1] 0.80ns
:3  %i_14 = add i4 %i_2, 1

ST_7: stg_87 [1/1] 1.57ns
:4  br i1 %exitcond4, label %.preheader51, label %8

ST_7: tmp_2 [1/1] 0.00ns
:2  %tmp_2 = zext i4 %i_2 to i64

ST_7: vector_addr_2 [1/1] 0.00ns
:3  %vector_addr_2 = getelementptr [8 x i1]* @vector, i64 0, i64 %tmp_2

ST_7: vector_load [2/2] 2.39ns
:4  %vector_load = load i1* %vector_addr_2, align 1


 <State 8>: 2.39ns
ST_8: stg_91 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([13 x i8]* @p_str4) nounwind

ST_8: tmp_7 [1/1] 0.00ns
:1  %tmp_7 = call i32 (...)* @_ssdm_op_SpecRegionBegin([13 x i8]* @p_str4)

ST_8: vector_load [1/2] 2.39ns
:4  %vector_load = load i1* %vector_addr_2, align 1

ST_8: stg_94 [1/1] 0.00ns
:5  br i1 %vector_load, label %.preheader52.preheader, label %.loopexit53

ST_8: tmp_2_trn_cast [1/1] 0.00ns
.preheader52.preheader:0  %tmp_2_trn_cast = zext i4 %i_2 to i8

ST_8: stg_96 [1/1] 1.57ns
.preheader52.preheader:1  br label %.preheader52


 <State 9>: 4.11ns
ST_9: e_1 [1/1] 0.00ns
.preheader52:0  %e_1 = phi i4 [ %e_6, %9 ], [ 0, %.preheader52.preheader ]

ST_9: exitcond6 [1/1] 1.88ns
.preheader52:1  %exitcond6 = icmp eq i4 %e_1, -8

ST_9: empty_6 [1/1] 0.00ns
.preheader52:2  %empty_6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)

ST_9: e_6 [1/1] 0.80ns
.preheader52:3  %e_6 = add i4 %e_1, 1

ST_9: stg_101 [1/1] 0.00ns
.preheader52:4  br i1 %exitcond6, label %.loopexit53, label %9

ST_9: stg_102 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([13 x i8]* @p_str5) nounwind

ST_9: tmp_27 [1/1] 0.00ns
:1  %tmp_27 = call i7 @_ssdm_op_BitConcatenate.i7.i4.i3(i4 %e_1, i3 0)

ST_9: matrix_addr7_cast [1/1] 0.00ns
:2  %matrix_addr7_cast = zext i7 %tmp_27 to i8

ST_9: matrix_addr8 [1/1] 1.72ns
:3  %matrix_addr8 = add i8 %matrix_addr7_cast, %tmp_2_trn_cast

ST_9: tmp_28 [1/1] 0.00ns
:4  %tmp_28 = zext i8 %matrix_addr8 to i64

ST_9: matrix_addr_1 [1/1] 0.00ns
:5  %matrix_addr_1 = getelementptr [64 x i8]* @matrix, i64 0, i64 %tmp_28

ST_9: stg_108 [1/1] 2.39ns
:6  store i8 -1, i8* %matrix_addr_1, align 1

ST_9: stg_109 [1/1] 0.00ns
:7  br label %.preheader52

ST_9: empty_7 [1/1] 0.00ns
.loopexit53:0  %empty_7 = call i32 (...)* @_ssdm_op_SpecRegionEnd([13 x i8]* @p_str4, i32 %tmp_7)

ST_9: stg_111 [1/1] 0.00ns
.loopexit53:1  br label %7


 <State 10>: 3.45ns
ST_10: i_3 [1/1] 0.00ns
.preheader51:0  %i_3 = phi i4 [ %i_10, %.loopexit50 ], [ 0, %7 ]

ST_10: min [1/1] 0.00ns
.preheader51:1  %min = phi i8 [ %min_3, %.loopexit50 ], [ -1, %7 ]

ST_10: exitcond5 [1/1] 1.88ns
.preheader51:2  %exitcond5 = icmp eq i4 %i_3, -8

ST_10: empty_8 [1/1] 0.00ns
.preheader51:3  %empty_8 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)

ST_10: i_10 [1/1] 0.80ns
.preheader51:4  %i_10 = add i4 %i_3, 1

ST_10: stg_117 [1/1] 1.57ns
.preheader51:5  br i1 %exitcond5, label %.preheader48, label %10

ST_10: tmp_10 [1/1] 0.00ns
:2  %tmp_10 = zext i4 %i_3 to i64

ST_10: vector_addr_3 [1/1] 0.00ns
:3  %vector_addr_3 = getelementptr [8 x i1]* @vector, i64 0, i64 %tmp_10

ST_10: vector_load_1 [2/2] 2.39ns
:4  %vector_load_1 = load i1* %vector_addr_3, align 1


 <State 11>: 3.96ns
ST_11: stg_121 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @p_str6) nounwind

ST_11: tmp_s [1/1] 0.00ns
:1  %tmp_s = call i32 (...)* @_ssdm_op_SpecRegionBegin([6 x i8]* @p_str6)

ST_11: vector_load_1 [1/2] 2.39ns
:4  %vector_load_1 = load i1* %vector_addr_3, align 1

ST_11: stg_124 [1/1] 1.57ns
:5  br i1 %vector_load_1, label %.preheader49.preheader, label %.loopexit50

ST_11: tmp_18 [1/1] 0.00ns
.preheader49.preheader:0  %tmp_18 = call i7 @_ssdm_op_BitConcatenate.i7.i4.i3(i4 %i_3, i3 0)

ST_11: matrix_addr5_cast [1/1] 0.00ns
.preheader49.preheader:1  %matrix_addr5_cast = zext i7 %tmp_18 to i8

ST_11: stg_127 [1/1] 1.57ns
.preheader49.preheader:2  br label %.preheader49


 <State 12>: 4.11ns
ST_12: e_2 [1/1] 0.00ns
.preheader49:0  %e_2 = phi i4 [ %e_7, %._crit_edge ], [ 0, %.preheader49.preheader ]

ST_12: min_1 [1/1] 0.00ns
.preheader49:1  %min_1 = phi i8 [ %min_4_min_1, %._crit_edge ], [ %min, %.preheader49.preheader ]

ST_12: exitcond8 [1/1] 1.88ns
.preheader49:2  %exitcond8 = icmp eq i4 %e_2, -8

ST_12: empty_9 [1/1] 0.00ns
.preheader49:3  %empty_9 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)

ST_12: e_7 [1/1] 0.80ns
.preheader49:4  %e_7 = add i4 %e_2, 1

ST_12: stg_133 [1/1] 1.57ns
.preheader49:5  br i1 %exitcond8, label %.loopexit50, label %._crit_edge

ST_12: tmp_15_trn_cast [1/1] 0.00ns
._crit_edge:1  %tmp_15_trn_cast = zext i4 %e_2 to i8

ST_12: matrix_addr6 [1/1] 1.72ns
._crit_edge:2  %matrix_addr6 = add i8 %matrix_addr5_cast, %tmp_15_trn_cast

ST_12: tmp_30 [1/1] 0.00ns
._crit_edge:3  %tmp_30 = zext i8 %matrix_addr6 to i64

ST_12: matrix_addr_2 [1/1] 0.00ns
._crit_edge:4  %matrix_addr_2 = getelementptr [64 x i8]* @matrix, i64 0, i64 %tmp_30

ST_12: min_2 [2/2] 2.39ns
._crit_edge:5  %min_2 = load i8* %matrix_addr_2, align 1


 <State 13>: 5.76ns
ST_13: stg_139 [1/1] 0.00ns
._crit_edge:0  call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @p_str7) nounwind

ST_13: min_2 [1/2] 2.39ns
._crit_edge:5  %min_2 = load i8* %matrix_addr_2, align 1

ST_13: tmp_14 [1/1] 2.00ns
._crit_edge:6  %tmp_14 = icmp ult i8 %min_2, %min_1

ST_13: min_4_min_1 [1/1] 1.37ns
._crit_edge:7  %min_4_min_1 = select i1 %tmp_14, i8 %min_2, i8 %min_1

ST_13: stg_143 [1/1] 0.00ns
._crit_edge:8  br label %.preheader49


 <State 14>: 0.00ns
ST_14: min_3 [1/1] 0.00ns
.loopexit50:0  %min_3 = phi i8 [ %min, %10 ], [ %min_1, %.preheader49 ]

ST_14: empty_10 [1/1] 0.00ns
.loopexit50:1  %empty_10 = call i32 (...)* @_ssdm_op_SpecRegionEnd([6 x i8]* @p_str6, i32 %tmp_s)

ST_14: stg_146 [1/1] 0.00ns
.loopexit50:2  br label %.preheader51


 <State 15>: 3.45ns
ST_15: i_4 [1/1] 0.00ns
.preheader48:0  %i_4 = phi i4 [ %i_11, %.loopexit47 ], [ 0, %.preheader51 ]

ST_15: exitcond7 [1/1] 1.88ns
.preheader48:1  %exitcond7 = icmp eq i4 %i_4, -8

ST_15: empty_11 [1/1] 0.00ns
.preheader48:2  %empty_11 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)

ST_15: i_11 [1/1] 0.80ns
.preheader48:3  %i_11 = add i4 %i_4, 1

ST_15: stg_151 [1/1] 1.57ns
.preheader48:4  br i1 %exitcond7, label %.preheader45, label %11

ST_15: tmp_13 [1/1] 0.00ns
:2  %tmp_13 = zext i4 %i_4 to i64

ST_15: vector_addr_4 [1/1] 0.00ns
:3  %vector_addr_4 = getelementptr [8 x i1]* @vector, i64 0, i64 %tmp_13

ST_15: vector_load_2 [2/2] 2.39ns
:4  %vector_load_2 = load i1* %vector_addr_4, align 1


 <State 16>: 2.39ns
ST_16: stg_155 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([12 x i8]* @p_str8) nounwind

ST_16: tmp_11 [1/1] 0.00ns
:1  %tmp_11 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str8)

ST_16: vector_load_2 [1/2] 2.39ns
:4  %vector_load_2 = load i1* %vector_addr_4, align 1

ST_16: stg_158 [1/1] 0.00ns
:5  br i1 %vector_load_2, label %.preheader46.preheader, label %.loopexit47

ST_16: tmp_26 [1/1] 0.00ns
.preheader46.preheader:0  %tmp_26 = call i7 @_ssdm_op_BitConcatenate.i7.i4.i3(i4 %i_4, i3 0)

ST_16: matrix_addr3_cast [1/1] 0.00ns
.preheader46.preheader:1  %matrix_addr3_cast = zext i7 %tmp_26 to i8

ST_16: stg_161 [1/1] 1.57ns
.preheader46.preheader:2  br label %.preheader46


 <State 17>: 4.11ns
ST_17: e_3 [1/1] 0.00ns
.preheader46:0  %e_3 = phi i4 [ %e_8, %12 ], [ 0, %.preheader46.preheader ]

ST_17: exitcond10 [1/1] 1.88ns
.preheader46:1  %exitcond10 = icmp eq i4 %e_3, -8

ST_17: empty_12 [1/1] 0.00ns
.preheader46:2  %empty_12 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)

ST_17: e_8 [1/1] 0.80ns
.preheader46:3  %e_8 = add i4 %e_3, 1

ST_17: stg_166 [1/1] 0.00ns
.preheader46:4  br i1 %exitcond10, label %.loopexit47, label %12

ST_17: tmp_20_trn_cast [1/1] 0.00ns
:1  %tmp_20_trn_cast = zext i4 %e_3 to i8

ST_17: matrix_addr4 [1/1] 1.72ns
:2  %matrix_addr4 = add i8 %matrix_addr3_cast, %tmp_20_trn_cast

ST_17: tmp_31 [1/1] 0.00ns
:3  %tmp_31 = zext i8 %matrix_addr4 to i64

ST_17: matrix_addr_3 [1/1] 0.00ns
:4  %matrix_addr_3 = getelementptr [64 x i8]* @matrix, i64 0, i64 %tmp_31

ST_17: matrix_load [2/2] 2.39ns
:5  %matrix_load = load i8* %matrix_addr_3, align 1

ST_17: empty_13 [1/1] 0.00ns
.loopexit47:0  %empty_13 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str8, i32 %tmp_11)

ST_17: stg_173 [1/1] 0.00ns
.loopexit47:1  br label %.preheader48


 <State 18>: 6.50ns
ST_18: stg_174 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([12 x i8]* @p_str9) nounwind

ST_18: matrix_load [1/2] 2.39ns
:5  %matrix_load = load i8* %matrix_addr_3, align 1

ST_18: tmp_19 [1/1] 1.72ns
:6  %tmp_19 = sub i8 %matrix_load, %min

ST_18: stg_177 [1/1] 2.39ns
:7  store i8 %tmp_19, i8* %matrix_addr_3, align 1

ST_18: stg_178 [1/1] 0.00ns
:8  br label %.preheader46


 <State 19>: 3.45ns
ST_19: i_5 [1/1] 0.00ns
.preheader45:0  %i_5 = phi i4 [ %i_12, %.loopexit44 ], [ 0, %.preheader48 ]

ST_19: exitcond9 [1/1] 1.88ns
.preheader45:1  %exitcond9 = icmp eq i4 %i_5, -8

ST_19: empty_14 [1/1] 0.00ns
.preheader45:2  %empty_14 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)

ST_19: i_12 [1/1] 0.80ns
.preheader45:3  %i_12 = add i4 %i_5, 1

ST_19: stg_183 [1/1] 1.57ns
.preheader45:4  br i1 %exitcond9, label %.preheader42, label %13

ST_19: tmp_17 [1/1] 0.00ns
:2  %tmp_17 = zext i4 %i_5 to i64

ST_19: vector_addr_5 [1/1] 0.00ns
:3  %vector_addr_5 = getelementptr [8 x i1]* @vector, i64 0, i64 %tmp_17

ST_19: vector_load_3 [2/2] 2.39ns
:4  %vector_load_3 = load i1* %vector_addr_5, align 1


 <State 20>: 2.39ns
ST_20: stg_187 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str10) nounwind

ST_20: tmp_16 [1/1] 0.00ns
:1  %tmp_16 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str10)

ST_20: vector_load_3 [1/2] 2.39ns
:4  %vector_load_3 = load i1* %vector_addr_5, align 1

ST_20: stg_190 [1/1] 0.00ns
:5  br i1 %vector_load_3, label %.preheader43.preheader, label %.loopexit44

ST_20: tmp_29 [1/1] 0.00ns
.preheader43.preheader:0  %tmp_29 = call i7 @_ssdm_op_BitConcatenate.i7.i4.i3(i4 %i_5, i3 0)

ST_20: matrix_addr1_cast [1/1] 0.00ns
.preheader43.preheader:1  %matrix_addr1_cast = zext i7 %tmp_29 to i8

ST_20: stg_193 [1/1] 1.57ns
.preheader43.preheader:2  br label %.preheader43


 <State 21>: 4.11ns
ST_21: e_4 [1/1] 0.00ns
.preheader43:0  %e_4 = phi i4 [ %e_9, %._crit_edge56 ], [ 0, %.preheader43.preheader ]

ST_21: exitcond11 [1/1] 1.88ns
.preheader43:1  %exitcond11 = icmp eq i4 %e_4, -8

ST_21: empty_15 [1/1] 0.00ns
.preheader43:2  %empty_15 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)

ST_21: e_9 [1/1] 0.80ns
.preheader43:3  %e_9 = add i4 %e_4, 1

ST_21: stg_198 [1/1] 0.00ns
.preheader43:4  br i1 %exitcond11, label %.loopexit44, label %14

ST_21: tmp_24_trn_cast [1/1] 0.00ns
:2  %tmp_24_trn_cast = zext i4 %e_4 to i8

ST_21: matrix_addr2 [1/1] 1.72ns
:3  %matrix_addr2 = add i8 %matrix_addr1_cast, %tmp_24_trn_cast

ST_21: tmp_32 [1/1] 0.00ns
:4  %tmp_32 = zext i8 %matrix_addr2 to i64

ST_21: matrix_addr_4 [1/1] 0.00ns
:5  %matrix_addr_4 = getelementptr [64 x i8]* @matrix, i64 0, i64 %tmp_32

ST_21: matrix_load_1 [2/2] 2.39ns
:6  %matrix_load_1 = load i8* %matrix_addr_4, align 1

ST_21: empty_16 [1/1] 0.00ns
.loopexit44:0  %empty_16 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str10, i32 %tmp_16)

ST_21: stg_205 [1/1] 0.00ns
.loopexit44:1  br label %.preheader45


 <State 22>: 4.39ns
ST_22: stg_206 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str11) nounwind

ST_22: tmp_23 [1/1] 0.00ns
:1  %tmp_23 = zext i4 %e_4 to i64

ST_22: matrix_load_1 [1/2] 2.39ns
:6  %matrix_load_1 = load i8* %matrix_addr_4, align 1

ST_22: tmp_24 [1/1] 2.00ns
:7  %tmp_24 = icmp eq i8 %matrix_load_1, 0

ST_22: stg_210 [1/1] 0.00ns
:8  br i1 %tmp_24, label %15, label %._crit_edge56

ST_22: vector_addr_7 [1/1] 0.00ns
:0  %vector_addr_7 = getelementptr [8 x i1]* @vector, i64 0, i64 %tmp_23

ST_22: stg_212 [1/1] 2.39ns
:1  store i1 true, i1* %vector_addr_7, align 1

ST_22: result_addr_1 [1/1] 0.00ns
:2  %result_addr_1 = getelementptr [8 x i4]* @result, i64 0, i64 %tmp_23

ST_22: stg_214 [1/1] 2.39ns
:3  store i4 %i_5, i4* %result_addr_1, align 1

ST_22: stg_215 [1/1] 0.00ns
:4  br label %._crit_edge56

ST_22: stg_216 [1/1] 0.00ns
._crit_edge56:0  br label %.preheader43


 <State 23>: 2.39ns
ST_23: i_6 [1/1] 0.00ns
.preheader42:0  %i_6 = phi i4 [ %i_16, %17 ], [ 1, %.preheader45 ]

ST_23: tmp_20 [1/1] 0.00ns
.preheader42:1  %tmp_20 = call i1 @_ssdm_op_BitSelect.i1.i4.i32(i4 %i_6, i32 3)

ST_23: stg_219 [1/1] 0.00ns
.preheader42:2  br i1 %tmp_20, label %.loopexit, label %16

ST_23: tmp_21 [1/1] 0.00ns
:1  %tmp_21 = zext i4 %i_6 to i64

ST_23: vector_addr_6 [1/1] 0.00ns
:2  %vector_addr_6 = getelementptr [8 x i1]* @vector, i64 0, i64 %tmp_21

ST_23: vector_load_4 [2/2] 2.39ns
:3  %vector_load_4 = load i1* %vector_addr_6, align 1


 <State 24>: 3.45ns
ST_24: stg_223 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @p_str12) nounwind

ST_24: vector_load_4 [1/2] 2.39ns
:3  %vector_load_4 = load i1* %vector_addr_6, align 1

ST_24: stg_225 [1/1] 0.00ns
:4  br i1 %vector_load_4, label %17, label %.loopexit

ST_24: i_16 [1/1] 0.80ns
:0  %i_16 = add i4 %i_6, 1

ST_24: stg_227 [1/1] 0.00ns
:1  br label %.preheader42

ST_24: tmp_22 [1/1] 1.88ns
.loopexit:0  %tmp_22 = icmp ugt i4 %i_6, 6

ST_24: stg_229 [1/1] 1.57ns
.loopexit:1  br i1 %tmp_22, label %.preheader, label %18

ST_24: empty_17 [1/1] 0.00ns
:0  %empty_17 = call i32 (...)* @_ssdm_op_SpecRegionEnd([10 x i8]* @p_str3, i32 %tmp_3)

ST_24: stg_231 [1/1] 0.00ns
:1  br label %.preheader54


 <State 25>: 4.27ns
ST_25: i_7 [1/1] 0.00ns
.preheader:0  %i_7 = phi i4 [ %i_17, %19 ], [ 0, %.loopexit ]

ST_25: exitcond [1/1] 1.88ns
.preheader:1  %exitcond = icmp eq i4 %i_7, -8

ST_25: empty_18 [1/1] 0.00ns
.preheader:2  %empty_18 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)

ST_25: i_17 [1/1] 0.80ns
.preheader:3  %i_17 = add i4 %i_7, 1

ST_25: stg_236 [1/1] 0.00ns
.preheader:4  br i1 %exitcond, label %20, label %19

ST_25: tmp_25 [1/1] 0.00ns
:1  %tmp_25 = zext i4 %i_7 to i64

ST_25: result_addr [1/1] 0.00ns
:2  %result_addr = getelementptr [8 x i4]* @result, i64 0, i64 %tmp_25

ST_25: result_load [2/2] 2.39ns
:3  %result_load = load i4* %result_addr, align 1

ST_25: out_last_V_addr [1/1] 0.00ns
:7  %out_last_V_addr = getelementptr [8 x i1]* %out_last_V, i64 0, i64 %tmp_25

ST_25: not_tmp_s [1/1] 1.88ns
:8  %not_tmp_s = icmp ugt i4 %i_7, 6

ST_25: stg_242 [1/1] 2.39ns
:9  store i1 %not_tmp_s, i1* %out_last_V_addr, align 1

ST_25: stg_243 [1/1] 0.00ns
:0  ret void


 <State 26>: 4.78ns
ST_26: stg_244 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([12 x i8]* @p_str13) nounwind

ST_26: result_load [1/2] 2.39ns
:3  %result_load = load i4* %result_addr, align 1

ST_26: val_assign [1/1] 0.00ns
:4  %val_assign = zext i4 %result_load to i8

ST_26: out_data_V_addr [1/1] 0.00ns
:5  %out_data_V_addr = getelementptr [8 x i8]* %out_data_V, i64 0, i64 %tmp_25

ST_26: stg_248 [1/1] 2.39ns
:6  store i8 %val_assign, i8* %out_data_V_addr, align 1

ST_26: stg_249 [1/1] 0.00ns
:10  br label %.preheader



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
